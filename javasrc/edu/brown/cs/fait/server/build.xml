<project name='fait.server' default='compile'>

   <property file='../../../../../../build.properties' />
   <property name='PRO' value='/research' />
   <available file="${PRO}/ivy" type="dir" property="ivy.present" />
   <property name='IVYBIN' value='${PRO}/ivy/java' />
   <property name='FAIT' value='/research/people/spr/fait' />

   <target name='init'>
      <path id='fait.classpath'>
	 <pathelement location='${FAIT}/java' />
	 <pathelement location='${IVYBIN}' />
	 <pathelement location='${PRO}/bubbles/lib/junit.jar' />
	 <fileset dir='${FAIT}/lib/' includes='asm*.jar' />
	 <fileset dir='${PRO}/ivy/lib/eclipsejar' includes='*.jar' />
      </path>
      <path id='test.classpath'>
	 <pathelement location='${FAIT}/java' />
	 <pathelement location='${IVYBIN}' />
	 <pathelement location='${PRO}/bubbles/lib/junit.jar' />
	 <fileset dir='${FAIT}/lib/' includes='asm*.jar' />
	 <fileset dir='${PRO}/ivy/lib/eclipsejar' includes='*.jar' />
      </path>
   </target>

   <target name='compile' depends='init'>
      <javac srcdir='.' destdir='${FAIT}/java' debug='on' deprecation='on'
		includeantruntime='false' excludes='scan/**' >
	 <classpath refid='fait.classpath' />
	 <compilerarg value='-Xlint:all' />
      </javac>
   </target>

   <target name='clean'>
      <delete dir='${FAIT}/java/edu/brown/cs/fait/server' />
   </target>

   <target name='test' depends='compile'>
      <junit fork='true' printsummary='on'>
	 <classpath refid='test.classpath' />
	 <assertions><enable/></assertions>
	 <formatter type='plain' />
	 <test name='edu.brown.cs.fait.server.ServerTest' />
      </junit>
   </target>

   <target name='buildjavalib' depends='compile'>
      <java classname='edu.brown.cs.fait.server.ServerLibraryBuilder' fork='true'
		output='/ws/volfred/spr/sysbuilder_java.out' input='/dev/null' >
	 <classpath refid='fait.classpath' />
	 <arg value='-p' />
	 <arg value='java.' />
	 <arg value='-L' />
	 <arg value='/ws/volfred/spr/sysbuilder_java.log' />
	 <arg value='-o' />
	 <arg value='/u/spr/home/java.fait' />
      </java>
   </target>

   <target name='buildjavaxlib' depends='compile'>
      <java classname='edu.brown.cs.fait.server.ServerLibraryBuilder' fork='true'
		output='/ws/volfred/spr/sysbuilder_javax.out' input='/dev/null' >
	 <classpath refid='fait.classpath' />
	 <arg value='-p' />
	 <arg value='javax.' />
	 <arg value='-L' />
	 <arg value='/ws/volfred/spr/sysbuilder_javax.log' />
	 <arg value='-o' />
	 <arg value='/u/spr/home/javax.fait' />
      </java>
   </target>

   <target name='buildomglib' depends='compile'>
      <java classname='edu.brown.cs.fait.server.ServerLibraryBuilder' fork='true'
		output='/ws/volfred/spr/sysbuilder_omg.out' input='/dev/null' >
	 <classpath refid='fait.classpath' />
	 <arg value='-p' />
	 <arg value='org.omg.' />
	 <arg value='-L' />
	 <arg value='/ws/volfred/spr/sysbuilder_omg.log' />
	 <arg value='-o' />
	 <arg value='/u/spr/home/omg.fait' />
      </java>
   </target>

   <target name='buildw3clib' depends='compile'>
      <java classname='edu.brown.cs.fait.server.ServerLibraryBuilder' fork='true'
		output='/ws/volfred/spr/sysbuilder_w3c.out' input='/dev/null' >
	 <classpath refid='fait.classpath' />
	 <arg value='-p' />
	 <arg value='org.w3c.' />
	 <arg value='-p' />
	 <arg value='org.xml.' />
	 <arg value='-L' />
	 <arg value='/ws/volfred/spr/sysbuilder_w3c.log' />
	 <arg value='-o' />
	 <arg value='/u/spr/home/w3c.fait' />
      </java>
   </target>

   <target name='testbubbles' depends='compile'>
      <junit fork='true' printsummary='on'>
	 <classpath refid='fait.classpath' />
	 <assertions><enable/></assertions>
	 <formatter type='xml' usefile='true' />
	 <test name='edu.brown.cs.fait.server.ServerTest'
	       methods='serverTestBubbles'
	       outfile='testbubbles.out' />
      </junit>
   </target>

   <target name='testsecurity' depends='compile'>
      <junit fork='true' printsummary='on'>
	 <classpath refid='fait.classpath' />
	 <assertions><enable/></assertions>
	 <formatter type='xml' usefile='true' />
	 <test name='edu.brown.cs.fait.server.ServerTest'
	       methods='serverTestJavaSecurity'
	       outfile='testsecurity.out' />
      </junit>
   </target>

   <target name='testwebgoat' depends='compile'>
      <junit fork='true' printsummary='on'>
	 <classpath refid='fait.classpath' />
	 <assertions><enable/></assertions>
	 <formatter type='xml' usefile='true' />
	 <test name='edu.brown.cs.fait.server.ServerTest'
	       methods='serverTestWebGoat'
	       outfile='testwebgoat.out' />
      </junit>
   </target>

</project>



